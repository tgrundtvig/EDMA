/* Generated By:JavaCC: Do not edit this line. DataModelParserConstants.java */
package org.abstractica.edma.compiler;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface DataModelParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int DECIMAL = 9;
  /** RegularExpression Id. */
  int NUMBER = 10;
  /** RegularExpression Id. */
  int DIGITS = 11;
  /** RegularExpression Id. */
  int MIN = 12;
  /** RegularExpression Id. */
  int MAX = 13;
  /** RegularExpression Id. */
  int KEYWORD_NULL = 14;
  /** RegularExpression Id. */
  int KEYWORD_VALUEDOMAIN = 15;
  /** RegularExpression Id. */
  int KEYWORD_DATAMODEL = 16;
  /** RegularExpression Id. */
  int KEYWORD_KIND = 17;
  /** RegularExpression Id. */
  int KEYWORD_EXTENDS = 18;
  /** RegularExpression Id. */
  int KEYWORD_RELATION = 19;
  /** RegularExpression Id. */
  int KEYWORD_SINGLETON = 20;
  /** RegularExpression Id. */
  int KEYWORD_UNIQUE = 21;
  /** RegularExpression Id. */
  int KEYWORD_COMPARE = 22;
  /** RegularExpression Id. */
  int KEYWORD_EQUALS = 23;
  /** RegularExpression Id. */
  int KEYWORD_VOID = 24;
  /** RegularExpression Id. */
  int KEYWORD_ACTION = 25;
  /** RegularExpression Id. */
  int KEYWORD_INTERFACE = 26;
  /** RegularExpression Id. */
  int KEYWORD_VIEW = 27;
  /** RegularExpression Id. */
  int KEYWORD_DEFAULT = 28;
  /** RegularExpression Id. */
  int KEYWORD_TRUE = 29;
  /** RegularExpression Id. */
  int KEYWORD_FALSE = 30;
  /** RegularExpression Id. */
  int KEYWORD_LISTOF = 31;
  /** RegularExpression Id. */
  int KEYWORD_ENUM = 32;
  /** RegularExpression Id. */
  int KEYWORD_MAP = 33;
  /** RegularExpression Id. */
  int KEYWORD_ONEOF = 34;
  /** RegularExpression Id. */
  int KEYWORD_STRUCT = 35;
  /** RegularExpression Id. */
  int KEYWORD_CONSTRAINTS = 36;
  /** RegularExpression Id. */
  int KEYWORD_PUBLISH = 37;
  /** RegularExpression Id. */
  int KEYWORD_AS = 38;
  /** RegularExpression Id. */
  int KEYWORD_PUBLISHAS = 39;
  /** RegularExpression Id. */
  int KEYWORD_ON = 40;
  /** RegularExpression Id. */
  int KEYWORD_INPUT = 41;
  /** RegularExpression Id. */
  int KEYWORD_OUTPUT = 42;
  /** RegularExpression Id. */
  int KEYWORD_ERRORCODES = 43;
  /** RegularExpression Id. */
  int KEYWORD_DESCRIPTION = 44;
  /** RegularExpression Id. */
  int BOOLEAN_DOMAIN = 45;
  /** RegularExpression Id. */
  int STRING_DOMAIN = 46;
  /** RegularExpression Id. */
  int FLOAT_DOMAIN = 47;
  /** RegularExpression Id. */
  int DOUBLE_DOMAIN = 48;
  /** RegularExpression Id. */
  int INTEGER_DOMAIN = 49;
  /** RegularExpression Id. */
  int LONG_DOMAIN = 50;
  /** RegularExpression Id. */
  int REGEX_RANGE = 51;
  /** RegularExpression Id. */
  int CAMELCASE_WORD = 52;
  /** RegularExpression Id. */
  int IDENTIFIER = 53;
  /** RegularExpression Id. */
  int ARROW = 54;
  /** RegularExpression Id. */
  int L_PAR = 55;
  /** RegularExpression Id. */
  int R_PAR = 56;
  /** RegularExpression Id. */
  int L_BR = 57;
  /** RegularExpression Id. */
  int R_BR = 58;
  /** RegularExpression Id. */
  int L_SQBR = 59;
  /** RegularExpression Id. */
  int R_SQBR = 60;
  /** RegularExpression Id. */
  int COLON = 61;
  /** RegularExpression Id. */
  int COMMA = 62;
  /** RegularExpression Id. */
  int RELATION_SYMBOL = 63;
  /** RegularExpression Id. */
  int QUESTION_MARK = 64;
  /** RegularExpression Id. */
  int PLUS = 65;
  /** RegularExpression Id. */
  int MINUS = 66;
  /** RegularExpression Id. */
  int LT = 67;
  /** RegularExpression Id. */
  int GT = 68;
  /** RegularExpression Id. */
  int Q_STRING = 69;
  /** RegularExpression Id. */
  int ALLOWABLE_CHARACTERS = 70;

  /** Lexical state. */
  int DEFAULT = 0;
  /** Lexical state. */
  int INSIDE_COMMENT = 1;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\r\"",
    "\"\\n\"",
    "<token of kind 5>",
    "\"/*\"",
    "\"*/\"",
    "<token of kind 8>",
    "<DECIMAL>",
    "<NUMBER>",
    "<DIGITS>",
    "\"MIN\"",
    "\"MAX\"",
    "\"null\"",
    "\"ValueDomain\"",
    "\"DataModel\"",
    "\"Kind\"",
    "<KEYWORD_EXTENDS>",
    "\"Relation\"",
    "\"Singleton\"",
    "\"Unique\"",
    "\"Compare\"",
    "\"Equals\"",
    "\"void\"",
    "\"Action\"",
    "\"Interface\"",
    "\"View\"",
    "\"Default\"",
    "\"true\"",
    "\"false\"",
    "\"List\"",
    "\"Enum\"",
    "\"Map\"",
    "\"OneOf\"",
    "\"Struct\"",
    "\"Constraints\"",
    "\"Publish\"",
    "\"As\"",
    "\"PublishAs\"",
    "\"On\"",
    "\"Input\"",
    "\"Output\"",
    "\"ErrorCodes\"",
    "\"Description\"",
    "\"Boolean\"",
    "\"String\"",
    "\"Float\"",
    "\"Double\"",
    "\"Integer\"",
    "\"Long\"",
    "<REGEX_RANGE>",
    "<CAMELCASE_WORD>",
    "<IDENTIFIER>",
    "\"->\"",
    "\"(\"",
    "\")\"",
    "\"{\"",
    "\"}\"",
    "\"[\"",
    "\"]\"",
    "\":\"",
    "\",\"",
    "<RELATION_SYMBOL>",
    "\"?\"",
    "\"+\"",
    "\"-\"",
    "\"<\"",
    "\">\"",
    "<Q_STRING>",
    "<ALLOWABLE_CHARACTERS>",
    "\"..\"",
  };

}
