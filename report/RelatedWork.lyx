#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass article
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\use_hyperref false
\papersize default
\use_geometry false
\use_amsmath 1
\use_esint 1
\use_mhchem 1
\use_mathdots 1
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Section
Related work
\end_layout

\begin_layout Subsection
Entity-Relationship model
\end_layout

\begin_layout Standard
Our meta data model is heavily inspired by the entity-relationship model
 (ER model).
 The ER model is an abstract and conceptual way of representing a data model
\begin_inset CommandInset citation
LatexCommand cite
key "chen1976entity"

\end_inset

.
 The main concepts in the ER model are entities and the relationships between
 them.
 The ER model strives to be a representation of the data model that is close
 to the human perception of the data model and is not concerned with how
 the data is physically stored.
\end_layout

\begin_layout Subsection
Apache Torque
\end_layout

\begin_layout Standard
Apache Torque is an object-relational mapper for Java, that also uses the
 idea of auto-generating the object oriented model instead of having the
 user write it by hand and use annotations for the mapping
\begin_inset CommandInset citation
LatexCommand cite
key "torque"

\end_inset

.
\end_layout

\begin_layout Standard
In Torque the user defines the data model in an XML schema and Torque then
 generates both the object oriented model, the database schemes and the
 binding between the object oriented model and the relational database.
 Torque can also generate the XML schema from an existing database model.
\end_layout

\begin_layout Subsection
Eclipse Modeling Framework
\end_layout

\begin_layout Standard
Some inspiration for EDMA came from working with the Eclipse Modeling Framework
 (EMF) in a model driven develop course.
 The Eclipse Modeling Framework is a huge framework with a lot of useful
 functionality.
 Unfortunately we did not feel that it was very pleasant to work with.
 As an example, data models in the eclipse framework are defined in an XML-based
 language called XMI.
 For a simple 
\emph on
book
\emph default
 class with a 
\emph on
title
\emph default
 attribute and a 
\emph on
pages
\emph default
 attribute the definition looks like this:
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "basicstyle={\footnotesize},breaklines=true"
inline false
status open

\begin_layout Plain Layout

</xsd:schema><ecore:EPackage xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI"
\end_layout

\begin_layout Plain Layout

  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
\end_layout

\begin_layout Plain Layout

  xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore"
\end_layout

\begin_layout Plain Layout

  name="library "nsURI="http:///library.ecore" nsPrefix="library">
\end_layout

\begin_layout Plain Layout

<eClassifiers xsi:type="ecore:EClass" name="Book">
\end_layout

\begin_layout Plain Layout

  <eStructuralFeatures xsi:type="ecore:EAttribute" name="title"
\end_layout

\begin_layout Plain Layout

      eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
\end_layout

\begin_layout Plain Layout

  <eStructuralFeatures xsi:type="ecore:EAttribute" name="pages"
\end_layout

\begin_layout Plain Layout

      eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EInt"/>
\end_layout

\begin_layout Plain Layout

</eClassifiers>
\end_layout

\begin_layout Plain Layout

</ecore:EPackage>
\end_layout

\end_inset


\end_layout

\begin_layout Standard
It is also possible to define data models through commercial graphical modeling
 tools or annotated java files.
\end_layout

\begin_layout Standard
The EMF auto-generates a lot of Java code that the user is supposed to make
 changes to or inherit from.
 This quickly becomes very large files with mixed usercode and generated
 code where one can easily get lost.
\end_layout

\end_body
\end_document
